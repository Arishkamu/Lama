import Ostap;
import Fun;

fun gen (depth) {
  if depth == 0
  then "a"
  else gen (depth-1) ++ "*" ++ gen (depth-1)
  fi    
}

local a   = token ("a"),
      add = [token ("+"), fun (l, _, r) {Add (l, r)}],
      sub = [token ("-"), fun (l, _, r) {Sub (l, r)}],
      mul = [token ("*"), fun (l, _, r) {Mul (l, r)}],
      div = [token ("/"), fun (l, _, r) {Div (l, r)}],      
      exp = expr ({[Left, {add, sub}], [Left, {mul, div}]}, a) (id),
      i;

printf ("%s\n", parseString (exp |> bypass (eof), gen (5)).string)
